/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sdpproject;

import java.awt.Color;
import java.awt.Component;
import java.util.HashMap;

import javax.swing.JTextField;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

import static sdpproject.MainFrame.hashmap;



/**
 *
 * @author Mahesh
 */
public class BusinessProcessPanel extends javax.swing.JFrame {
    static String textSelected;
    static HashMap<String,Component> hashmap = new HashMap<String,Component>();
    static String typeOfRequirement; 

    
    /**
     * Creates new form BusinessProcessPanel
     */
    public BusinessProcessPanel() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        businessProcessPhrase = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        verbTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nounTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        businessProcessPhrase.setColumns(20);
        businessProcessPhrase.setRows(5);
        businessProcessPhrase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                businessProcessPhraseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(businessProcessPhrase);

        jLabel1.setText("Mark the verb and noun");

        okButton.setText("OK");
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Verb");

        jLabel3.setText("Noun");

        jButton1.setText("Find all nouns and verbs");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(verbTextField)
                                    .addComponent(nounTextField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(okButton))
                            .addComponent(jButton1))
                        .addGap(0, 150, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(verbTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nounTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void businessProcessPhraseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_businessProcessPhraseMouseClicked
        // TODO add your handling code here:
        if (businessProcessPhrase.getSelectedText() != null) { // See if they selected something 
            String s = businessProcessPhrase.getSelectedText();
            // Do work with String s
            textSelected = s;
        }
    }//GEN-LAST:event_businessProcessPhraseMouseClicked

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_okButtonActionPerformed

    private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
        // TODO add your handling code here:
        Requirement requirement = MainFrame.requirement;
        ClassifyNounAndVerbController nounVerbPhrase = new ClassifyNounAndVerbController();
        String phrase = verbTextField.getText()+" "+nounTextField.getText();
        if(!phrase.equals("")){
            
             ClassifyController classifyController = new ClassifyController();
            classifyController.classify(phrase,
                                    BusinessProcessPanel.typeOfRequirement);
                    
//            BusinessProcess businessProcess = new BusinessProcess(phrase,1);
//            requirement.append(businessProcess);
            dispose();
           // System.out.println(BusinessProcessPanel.typeOfRequirement);
            MainFrame frame = (MainFrame) MainFrame.hashmap.get("frame");
            frame.updateRequirements();
            nounVerbPhrase.clearPhrase();
        }
        	
    }//GEN-LAST:event_okButtonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
         StanfordNLP sNLP = new StanfordNLP();
         String[] nouns = null;
         String[] verbs = null;
        if(textSelected == null){
        	nouns = sNLP.getAllNouns(businessProcessPhrase.getText());
        	verbs = sNLP.getAllVerbs(businessProcessPhrase.getText());
        }
        else{
        	nouns = sNLP.getAllNouns(textSelected);
        	verbs = sNLP.getAllVerbs(textSelected);
        }
        
        for(int i=0; i <nouns.length;i++){
        	findAndHighlightText(nouns[i], Color.cyan);
        }
        
        for(int i=0; i <verbs.length;i++){
        	findAndHighlightText(verbs[i], Color.green);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public void showBusinessProcessPanel(BusinessProcessPanel bpPanel, String phrase, String typeOfRequirement) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusinessProcessPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusinessProcessPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusinessProcessPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusinessProcessPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                bpPanel.setVisible(true);
                setPhrase(phrase, typeOfRequirement);
                okButton.setEnabled(false);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea businessProcessPhrase;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nounTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField verbTextField;
    // End of variables declaration//GEN-END:variables

    public void setPhrase(String phrase, String typeOfRequirement) {
        businessProcessPhrase.setText(phrase);
        businessProcessPhrase.addMouseListener(new BPPhrasePopClickListener());
        hashmap.put("frame", this);
        BusinessProcessPanel.typeOfRequirement = typeOfRequirement;
        
    }
    
    public void updateNoun() {
        ClassifyNounAndVerbController cnv = new ClassifyNounAndVerbController();
        nounTextField.setText(cnv.getNoun());
        checkOKButton();
    }
    
    public void updateVerb() {
        ClassifyNounAndVerbController cnv = new ClassifyNounAndVerbController();
        verbTextField.setText(cnv.getVerb());
        checkOKButton();
    }
    
    public void checkOKButton(){
        if(!verbTextField.getText().equals("") && !nounTextField.getText().equals("")){
            okButton.setEnabled(true);
        }
        else{
            okButton.setEnabled(false);
        }
        
    }

    public static String getTypeOfRequirement() {
        return typeOfRequirement;
    }

    public static void setTypeOfRequirement(String typeOfRequirement) {
        BusinessProcessPanel.typeOfRequirement = typeOfRequirement;
    }
    
    public void findAndHighlightText(String searchWord, Color colorName){
    	Highlighter.HighlightPainter painter = 
    		    new DefaultHighlighter.DefaultHighlightPainter( colorName );

    		String text = businessProcessPhrase.getText();
    		int offset = text.indexOf(searchWord);
    		int length = searchWord.length();

    		while ( offset != -1)
    		{
    		    try
    		    {
    		    	businessProcessPhrase.getHighlighter().addHighlight(offset, offset + length, painter);
    		        offset = text.indexOf(searchWord, offset+1);
    		    }
    		    catch(BadLocationException ble) { System.out.println(ble); }
    		}
    }
    
    
    
    
}
